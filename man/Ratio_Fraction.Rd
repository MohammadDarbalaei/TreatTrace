% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Ratio_Fraction.R
\name{Ratio_Fraction}
\alias{Ratio_Fraction}
\title{Compute Ratio of Relative Abundance}
\usage{
Ratio_Fraction(model, sampled_fraction, q_up = 0.975, q_lo = 0.025)
}
\arguments{
\item{model}{A list containing the results of the `GPI` function, including:
- `names_cell`: Vector of cell line names.
- `control_group`: Name of the control group (e.g., "DMSO").
- `condition_count`: Vector of condition names (e.g., "Control", "Treatment").
- `n_sam`: Number of posterior samples.
- `L`: Number of cell types.
- `K`: Number of conditions.}

\item{sampled_fraction}{A list of matrices containing sampled fractions for each condition,
as generated by the `PPC_count` function. These fractions are estimated from the
Dirichlet-multinomial Bayesian model.}

\item{q_up}{Upper quantile threshold for filtering extreme values (default: 0.975).}

\item{q_lo}{Lower quantile threshold for filtering extreme values (default: 0.025).}
}
\value{
A list containing:
  - `plot_ratio_fraction`: A ggplot object visualizing the ratio of relative abundance across conditions.
  - `li_sam_ratio_relative`: A list of matrices containing the computed ratios of relative abundance.
}
\description{
This function computes the ratio of relative abundance of cell lines between a control group
(e.g., DMSO) and treatment groups. The ratios are derived from fractions estimated using a
Dirichlet-multinomial Bayesian approach. These ratios can be combined with tumor volume or
confluency data to estimate treatment resistance. Results are visualized using violin plots
to illustrate the distribution of relative abundances.
}
\examples{
# Example usage:
# model <- list(names_cell = c("Cell1", "Cell2"),
#               control_group = "Control",
#               condition_count = c("Control", "Treatment"),
#               n_sam = 10, L = 2, K = 2)
# sampled_fraction <- list(matrix(1:12, 3, 4), matrix(13:24, 3, 4))
# ratio_plot <- Ratio_Fraction(model, sampled_fraction)
# print(ratio_plot$plot_ratio_fraction)

}
